<UserControl x:Class="VisibleConfusion.MVVM.View.Task1View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:VisibleConfusion.MVVM.View"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:viewModel="clr-namespace:VisibleConfusion.MVVM.ViewModel"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors">
    <UserControl.DataContext>
        <viewModel:Task1ViewModel />
    </UserControl.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.5*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="1.5*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <local:PictureView Grid.Column="0"
                           DataContext="{Binding LeftPictureViewModel}" />
        <DockPanel Grid.Column="1">
            <WrapPanel DockPanel.Dock="Top"
                       Margin="1"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center">

            </WrapPanel>
            <Grid DockPanel.Dock="Bottom"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Button Command="{Binding LeftToRightCommand}">
                    <Control Style="{StaticResource RightArrow}"
                             RenderTransformOrigin="1,1"
                             Height="20"
                             Width="20">
                    </Control>
                </Button>
                <CheckBox Grid.Row="1"
                          HorizontalAlignment="Center"
                          IsChecked="{Binding SelectedFilter.Red}">R</CheckBox>
                <CheckBox Grid.Row="2"
                          HorizontalAlignment="Center"
                          IsChecked="{Binding SelectedFilter.Green}">G</CheckBox>
                <CheckBox Grid.Row="3"
                          HorizontalAlignment="Center"
                          IsChecked="{Binding SelectedFilter.Blue}">B</CheckBox>
                <Button Grid.Row="4"
                        Command="{Binding RightToLeftCommand}">
                    <Control Style="{StaticResource LeftArrow}"
                             RenderTransformOrigin="1,1"
                             Height="20"
                             Width="20">
                    </Control>
                </Button>
                <Button Grid.Row="5">Mono</Button>
            </Grid>

        </DockPanel>
        <local:PictureView Grid.Column="2"
                           DataContext="{Binding RightPictureViewModel}" />
        <Grid Grid.Column="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>
            <Grid Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />

                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"
                           Margin="5"
                           Foreground="{StaticResource TextColor_1}">Transformacje:</TextBlock>
                <Grid Grid.Row="1">

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Border Grid.Row="0"
                            BorderThickness="2"
                            Width="Auto"
                            Height="Auto"
                            BorderBrush="{StaticResource ForegroundColor}"
                            CornerRadius="2"
                            Margin="4"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Effect="{StaticResource dropShadow}">
                        <Grid>
                            <Border Name="mask"
                                    Background="{StaticResource ForegroundColor}"
                                    CornerRadius="1" />
                            <DockPanel>
                                <DockPanel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=mask}" />
                                </DockPanel.OpacityMask>
                                <Image Width="128"
                                       Height="128"
                                       Source="{Binding LookUpTableBitmap}"
                                       Stretch="Fill"></Image>

                            </DockPanel>
                        </Grid>
                    </Border>
                </Grid>
                <RadioButton Grid.Row="2"
                             Command="{Binding ButtonIdentityCommand}"
                             Margin="5"
                             HorizontalAlignment="Center"
                             IsChecked="True">Operacja tożsamościowa</RadioButton>
                <RadioButton Grid.Row="3"
                             Command="{Binding ButtonNegativeCommand}"
                             Margin="5"
                             HorizontalAlignment="Center">Negatyw</RadioButton>
                <RadioButton Grid.Row="4"
                             Command="{Binding ButtonLightnessCommand}"
                             Margin="5"
                             HorizontalAlignment="Center">Jasność +/-: P1</RadioButton>
                <RadioButton Grid.Row="5"
                             Command="{Binding ButtonThresholdCommand}"
                             Margin="5"
                             HorizontalAlignment="Center">Progowanie: P1</RadioButton>
                <RadioButton Grid.Row="6"
                             Command="{Binding ButtonThreshold2PointsCommand}"
                             Margin="5"
                             HorizontalAlignment="Center">Progowanie: P1, P2</RadioButton>
                <RadioButton Grid.Row="7"
                             Command="{Binding ButtonContrastCommand}"
                             Margin="5"
                             HorizontalAlignment="Center">Kontrast: P1</RadioButton>
                <Grid Grid.Row="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <CheckBox HorizontalAlignment="Center"
                                  IsChecked="{Binding SelectedFilter.Red}">R</CheckBox>
                        <CheckBox HorizontalAlignment="Center"
                                  Grid.Row="1"
                                  IsChecked="{Binding SelectedFilter.Green}">G</CheckBox>
                        <CheckBox HorizontalAlignment="Center"
                                  Grid.Row="2"
                                  IsChecked="{Binding SelectedFilter.Blue}">B</CheckBox>
                    </Grid>
                    <Grid Grid.Column="1"
                          Visibility="{Binding NumericalUpDownLimits.Point1Visible, 
							Converter={StaticResource BoolToVisibility}}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Foreground="{StaticResource TextColor_1}">P1:</TextBlock>
                        <xctk:IntegerUpDown VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Minimum="{Binding NumericalUpDownLimits.Point1Min}"
                                            DefaultValue="0"
                                            Value="0"
                                            Maximum="{Binding NumericalUpDownLimits.Point1Max}"
                                            ClipValueToMinMax="True"
                                            AllowSpin="True"
                                            Grid.Row="1">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="ValueChanged">
                                    <behaviors:InvokeCommandAction Command="{Binding OnNumericUpDownPoint1ChangedCommand}"
                                                                   PassEventArgsToCommand="True" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </xctk:IntegerUpDown>
                    </Grid>
                    <Grid Visibility="{Binding NumericalUpDownLimits.Point2Visible, 
							Converter={StaticResource BoolToVisibility}}"
                          Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Foreground="{StaticResource TextColor_1}">P2:</TextBlock>
                        <xctk:IntegerUpDown VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Minimum="{Binding NumericalUpDownLimits.Point2Min}"
                                            DefaultValue="127"
                                            Value="127"
                                            Maximum="{Binding NumericalUpDownLimits.Point2Max}"
                                            ClipValueToMinMax="True"
                                            AllowSpin="True"
                                            Grid.Row="1">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="ValueChanged">
                                    <behaviors:InvokeCommandAction Command="{Binding OnNumericUpDownPoint2ChangedCommand}"
                                                                   PassEventArgsToCommand="True" />
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </xctk:IntegerUpDown>
                    </Grid>
                </Grid>
                <Button Grid.Column="0"
                        Grid.Row="9"
                        VerticalAlignment="Top"
                        Command="{Binding DoLutTransformFromLeftToRightCommand}">P2=T(P1)</Button>
            </Grid>

        </Grid>
    </Grid>
</UserControl>
